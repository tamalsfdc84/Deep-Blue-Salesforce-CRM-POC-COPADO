<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>49.0</apiVersion>
    <assignments>
        <description>assign the choosen email to the variable</description>
        <name>AssignChoosenEmail</name>
        <label>AssignChoosenEmail</label>
        <locationX>923</locationX>
        <locationY>185</locationY>
        <assignmentItems>
            <assignToReference>varToAddress</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varUserRecord.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateTaskWithCaseOwnerEmailAddress</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>assign the choosen email to the variable</description>
        <name>AssignChoosenEmail_0</name>
        <label>AssignChoosenEmail</label>
        <locationX>910</locationX>
        <locationY>331</locationY>
        <assignmentItems>
            <assignToReference>varToAddress</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varGroupRecord.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateTaskWithCaseOwnerEmailAddress</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>check whether the owner of the case is the user or the queue</description>
        <name>check_for_user_or_Queue</name>
        <label>check for user or Queue</label>
        <locationX>631</locationX>
        <locationY>275</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>check_user</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCaseRecord.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getUser</targetReference>
            </connector>
            <label>check user?</label>
        </rules>
        <rules>
            <name>check_queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCaseRecord.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getGroup</targetReference>
            </connector>
            <label>check queue?</label>
        </rules>
    </decisions>
    <description>used to send email notification to case owner that the task associated to it is completed</description>
    <interviewLabel>TaskEmailNotification {!$Flow.CurrentDateTime}</interviewLabel>
    <label>TaskEmailNotification</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>fetch the case record with the help of varTaskRecord.whatID</description>
        <name>getCaseRecord</name>
        <label>getCaseRecord</label>
        <locationX>485</locationX>
        <locationY>274</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>check_for_user_or_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varTaskRecord.WhatId</elementReference>
            </value>
        </filters>
        <object>Case</object>
        <outputReference>varCaseRecord</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>OwnerId</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>get the group record</description>
        <name>getGroup</name>
        <label>getGroup</label>
        <locationX>777</locationX>
        <locationY>328</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignChoosenEmail_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varCaseRecord.OwnerId</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputReference>varGroupRecord</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Email</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>fetch the task record with the help of varTaskID</description>
        <name>getTaskRecord</name>
        <label>getTaskRecord</label>
        <locationX>485</locationX>
        <locationY>157</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getCaseRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varTaskID</elementReference>
            </value>
        </filters>
        <object>Task</object>
        <outputReference>varTaskRecord</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Status</queriedFields>
        <queriedFields>WhatId</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>get the user record</description>
        <name>getUser</name>
        <label>getUser</label>
        <locationX>802</locationX>
        <locationY>194</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignChoosenEmail</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varCaseRecord.OwnerId</elementReference>
            </value>
        </filters>
        <object>User</object>
        <outputReference>varUserRecord</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Email</queriedFields>
    </recordLookups>
    <recordUpdates>
        <name>UpdateTaskWithCaseOwnerEmailAddress</name>
        <label>UpdateTaskWithCaseOwnerEmailAddress</label>
        <locationX>259</locationX>
        <locationY>387</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varTaskID</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>WT_Case_Owner_Email__c</field>
            <value>
                <elementReference>varToAddress</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
    </recordUpdates>
    <start>
        <locationX>359</locationX>
        <locationY>19</locationY>
        <connector>
            <targetReference>getTaskRecord</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <variables>
        <name>varCaseID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varCaseRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <description>fetch the queue email with the help of varCaserecord.ownerID</description>
        <name>varGroupRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Group</objectType>
    </variables>
    <variables>
        <name>varTaskID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varTaskRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Task</objectType>
    </variables>
    <variables>
        <description>stores the email address to whom the mail has to be sent</description>
        <name>varToAddress</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>fetch the user record with varCaseRecord.ownerID</description>
        <name>varUserRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>User</objectType>
    </variables>
</Flow>
